#
# Kafka Configuration
#
quarkus.openshift.env.vars.kafka-bootstrap-servers=${KAFKA_BOOTSTRAP_SERVERS:kafka-cluster-kafka-bootstrap.kafka.svc.cluster.local:9092}
quarkus.openshift.env.vars.kafka-topic=${KAFKA_TOPIC:events}
quarkus.openshift.env.vars.kafka-group-id=${KAFKA_GROUP_ID:camel-mqtt-kafka-consumer}
#
# OpenTelemetry
#
quarkus.application.name=camel-quarkus-kafka-consumer
quarkus.opentelemetry.tracer.exporter.otlp.endpoint=${OTEL_EXPORTER_OTLP_ENDPOINT:http://jaeger-production-collector.kafka.svc.cluster.local:4317}
quarkus.openshift.env.vars.otel-exporter-otlp-endpoint=${OTEL_EXPORTER_OTLP_ENDPOINT:http://jaeger-production-collector.kafka.svc.cluster.local:4317}
quarkus.openshift.env.vars.otel-exporter-otlp-insecure=${OTEL_EXPORTER_OTLP_INSECURE:true}    
#
# Swagger
#
#quarkus.swagger-ui.enable=true
#quarkus.swagger-ui.always-include=true
#quarkus.swagger-ui.path=/api
#quarkus.http.non-application-root-path=/
#quarkus.smallrye-openapi.path=/openapi
#
# Openshift
#
quarkus.kubernetes-client.trust-certs=true
quarkus.s2i.base-jvm-image=registry.access.redhat.com/ubi8/openjdk-17
quarkus.openshift.route.expose=true
quarkus.openshift.deploy=true